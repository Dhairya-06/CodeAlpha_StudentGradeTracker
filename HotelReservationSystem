import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class HotelReservationSystem {
    private static Map<Integer, Room> rooms = new HashMap<>();
    private static int nextRoomNumber = 101;
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        initializeRooms();

        boolean quit = false;
        while (!quit) {
            printMenu();
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    searchRooms();
                    break;
                case 2:
                    makeReservation();
                    break;
                case 3:
                    viewBookingDetails();
                    break;
                case 4:
                    quit = true;
                    System.out.println("Thank you for using our hotel reservation system!");
                    break;
                default:
                    System.out.println("Invalid choice. Please enter a number between 1 and 4.");
            }
        }
        scanner.close();
    }

    private static void initializeRooms() {
        rooms.put(101, new Room(101, RoomType.SINGLE, 100));
        rooms.put(102, new Room(102, RoomType.DOUBLE, 150));
        rooms.put(103, new Room(103, RoomType.SUITE, 200));
    }

    private static void printMenu() {
        System.out.println("\nHotel Reservation System");
        System.out.println("1. Search Available Rooms");
        System.out.println("2. Make Reservation");
        System.out.println("3. View Booking Details");
        System.out.println("4. Quit");
        System.out.print("Enter your choice: ");
    }

    private static void searchRooms() {
        System.out.println("\nAvailable Rooms:");
        for (Room room : rooms.values()) {
            if (!room.isBooked()) {
                System.out.println(room);
            }
        }
    }

    private static void makeReservation() {
        System.out.print("Enter room number to reserve: ");
        int roomNumber = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        Room room = rooms.get(roomNumber);
        if (room != null && !room.isBooked()) {
            System.out.print("Enter guest name: ");
            String guestName = scanner.nextLine();
            System.out.print("Enter number of nights: ");
            int nights = scanner.nextInt();
            room.book(guestName, nights);
            System.out.println("Reservation successful.");
        } else {
            System.out.println("Invalid room number or room is already booked.");
        }
    }

    private static void viewBookingDetails() {
        System.out.print("Enter room number: ");
        int roomNumber = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        Room room = rooms.get(roomNumber);
        if (room != null && room.isBooked()) {
            System.out.println("Room Number: " + room.getRoomNumber());
            System.out.println("Guest Name: " + room.getGuestName());
            System.out.println("Room Type: " + room.getRoomType());
            System.out.println("Price per Night: $" + room.getPricePerNight());
            System.out.println("Number of Nights: " + room.getNights());
            System.out.println("Total Price: $" + room.getTotalPrice());
        } else {
            System.out.println("Invalid room number or room is not booked.");
        }
    }
}

enum RoomType {
    SINGLE, DOUBLE, SUITE
}

class Room {
    private int roomNumber;
    private RoomType roomType;
    private double pricePerNight;
    private boolean booked;
    private String guestName;
    private int nights;

    public Room(int roomNumber, RoomType roomType, double pricePerNight) {
        this.roomNumber = roomNumber;
        this.roomType = roomType;
        this.pricePerNight = pricePerNight;
    }

    public int getRoomNumber() {
        return roomNumber;
    }

    public RoomType getRoomType() {
        return roomType;
    }

    public double getPricePerNight() {
        return pricePerNight;
    }

    public boolean isBooked() {
        return booked;
    }

    public String getGuestName() {
        return guestName;
    }

    public int getNights() {
        return nights;
    }

    public double getTotalPrice() {
        return nights * pricePerNight;
    }

    public void book(String guestName, int nights) {
        this.booked = true;
        this.guestName = guestName;
        this.nights = nights;
    }

    @Override
    public String toString() {
        return "Room Number: " + roomNumber + ", Type: " + roomType + ", Price per Night: $" + pricePerNight;
    }
}
